// <auto-generated />
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Backend.Models.Note", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActionDate");

                    b.Property<int>("ActionNameID");

                    b.Property<string>("ActionNote");

                    b.Property<bool>("Callback");

                    b.Property<int>("ConsultantNameID");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MainNote")
                        .IsRequired()
                        .HasColumnName("Note");

                    b.Property<bool>("Urgent");

                    b.HasKey("ID");

                    b.HasIndex("ActionNameID");

                    b.HasIndex("ConsultantNameID");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("NotesCreatorDTO.ConsultantDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Consultants");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ConsultantDTO");
                });

            modelBuilder.Entity("Backend.Models.Consultant", b =>
                {
                    b.HasBaseType("NotesCreatorDTO.ConsultantDTO");


                    b.ToTable("Consultants");

                    b.HasDiscriminator().HasValue("Consultant");
                });

            modelBuilder.Entity("Backend.Models.Note", b =>
                {
                    b.HasOne("NotesCreatorDTO.ConsultantDTO", "ActionName")
                        .WithMany()
                        .HasForeignKey("ActionNameID");

                    b.HasOne("NotesCreatorDTO.ConsultantDTO", "ConsultantName")
                        .WithMany()
                        .HasForeignKey("ConsultantNameID");
                });
#pragma warning restore 612, 618
        }
    }
}
